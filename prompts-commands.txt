<<installs:
winget install --id Microsoft.Powershell --source winget
winget install --id Microsoft.Powershell.Preview --source winget
winget install --id Git.Git -e --source winget
winget install --id GitHub.cli
winget install -e --id OpenJS.NodeJS
winget install jqlang.jq
winget install --id GNU.Wget2 --source winget

npm i -g vercel@latest
>>

<<toBeOpen:
code .
start <filedocuments.txt>
>>

<<toBeDeleted:
rm -r folder-name
>>

<<no-funds:
npm config set fund false --location=global
>>

<<ssh-keys:
ssh-keygen -t rsa -b 4096 -C "your_email@example.com"
cat ~/.ssh/id_rsa.pub | clip
>>

<<create projects:
npx create-next-app@latest
npm create vite@latest
>>

<<logins:
git config --global user.name "username"
git config --global user.email "username@example.com"
gh auth login
vercel login
>>

<<lazygits:
git config --get-regexp alias
git config --global alias.acp '!f() { git add . && git commit -m "$@" && git push; }; f'
git config --global alias.acpp '!f() { git add . && git commit -m "$@" && git push && git pull --all; }; f'
git config --global alias.cpp '!f() { git commit -m "$@" && git push && git pull --all; }; f'
git config --global alias.cp '!f() { git commit -m "$@" && git push; }; f'
git config --global alias.ac '!f() { git add . && git commit -m "$@"; }; f'
>>

<<creating project from prompt:
vercel deploy
vercel > deployment-url.txt
cat deployment-url | clip // to clipboard
Get-Content deployment-url.txt | Set-Clipboard


* git add . git commit -m "first" *

gh repo create nothing-project --public --source=. --remote=origin --push
gh api repos/tordvb10/nothing-project -F homepage=https://nothing-project-ceh7zpksu-tordvb10s-projects.vercel.app // ctrl + v to paste url
vercel git connect
>>

<<powershell security error:
Set-ExecutionPolicy -Scope Process -ExecutionPolicy Bypass
Set-ExecutionPolicy -Scope Process -ExecutionPolicy Default
Set-ExecutionPolicy RemoteSigned -Scope CurrentUser
>>

<<ssms
Opened Registry Editor (regedit.exe).

    Went to Computer\HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\stornvme\Parameters\Device.

    Added a Multi-String Value ForcedPhysicalSectorSizeInBytes.

    Set the value to * 4096 (not * 4095 as originally suggested by Microsoft's guide).

    Restarted the computer, and the LocalDB instance started successfully.
>>

<<functions-in-PowerShell
function Get-FolderSize {
    param (
        [string]$FolderPath = (Get-Location).Path
    )

    $size = (Get-ChildItem -Path $FolderPath -Recurse -File | Measure-Object -Property Length -Sum).Sum
    $prefixes = "B", "KB", "MB", "GB", "TB", "PB", "EB", "ZB", "YB"
    $index = 0

    while ($size -ge 1024 -and $index -lt $prefixes.Count - 1) {
        $size /= 1024
        $index++
    }

    $sizeFormatted = "{0:N2} {1}" -f $size, $prefixes[$index]
    Write-Host "Folder Size: $sizeFormatted"
}
New-Alias -Name GetFolderSize -Value Get-FolderSize
(Get-Command Get-FolderSize).ScriptBlock
Remove-Item Alias:GetFolderSize
>>

<<pathToPowerShell:
C:\Users\tordv\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Windows PowerShell\Windows PowerShell.lnk
>>

<<$ProfilePowershell:
New-Item -Path $PROFILE -ItemType File -Force
notepad $PROFILE
	<<commands in @PROFILE path:
	. $env:MyDir\Bin.ps1
	>>
>>	

<<test:
winget install jqlang.jq
gh api repos/tordvb10/nothing-project | jq -r '.url' | clip
>>

<<dotnet:
dotnet tool install --global dotnet-ef
dotnet restore: run this after any added dependecies!
dotnet add package Microsoft.EntityFrameworkCore.Design
dotnet add package Microsoft.EntityFrameworkCore.SqlServer
dotnet add package Microsoft.AspNetCore.Identity.EntityFrameworkCore

dotnet-ef migrations add InitialCreate --project .\BuberBreakfast\
dotnet-ef database update --project .\BuberBreakfast\

	<<dotnet create:
	dotnet new sln -o "project-name"
	dotnet new classlib -o "project-name".Contracts
	dotnet new webapi -o "project-name"
	dotnet build
	more *sln \\ "*sln" stjerne-tegnet gjÃ¸r at det itereres mellom domenen gitt etter, i mappen man er i.
	dotnet sln add .\"project-name".Contracts\ .\"project-name"\
	cd "project-name"
	dotnet add package Microsoft.EntityFrameworkCore.Design
	dotnet add package Microsoft.EntityFrameworkCore.SqlServer
	dotnet add package Microsoft.AspNetCore.Identity.EntityFrameworkCore
	cd ..\
	devenv .
	>>

>>